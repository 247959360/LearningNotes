{"version":3,"file":"vue.js","sources":["../src/util/index.js","../src/observer/array.js","../src/observer/index.js","../src/init/state.js","../src/init/init.js","../src/index.js"],"sourcesContent":["export function isObject(data) {\n  if (typeof data === 'object' && data !== null) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport function def(data, key, value) {\n  Object.defineProperty(data, key, {\n    // 不可被枚举\n    enumerable: false,\n    // 不可以被在修改\n    configurable: false,\n    // 值\n    value: value\n  })\n}","\nlet oldArrayMethods = Array.prototype\nexport let arrayMethods = Object.create(oldArrayMethods)\n\n// 查找原型的方法  先从 __proto__ 上查找\n// 找不到的话  再去 prototype上查找\n// \n// 原型链看一下\nconst methods = [\n  'unshift',\n  'shift',\n  'pop',\n  'push',\n  'splice',\n  'sort',\n  'reverse'\n]\n\nmethods.forEach((method, index) => {\n  arrayMethods[method] = function(...args) {\n    console.log('用户改变了数组')\n    const result = oldArrayMethods[method].apply(this, args)\n    let ob = this.__ob__\n    console.log(ob, 'ob方法')\n    let inserted // 插入的元素是对象还需要在劫持\n    // 获取到插入的数据\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args\n        break;\n      case 'splice':\n        inserted = args.slice(2) // arr.splice(0,1,{name:1})\n      default:\n        break;\n    }\n    if(inserted) {\n      console.log(inserted, 'inserted')\n      ob.observerArray(inserted)\n    }\n    return result\n  }\n})","// data中的数据 重新定义\nimport { isObject, def } from '../util/index'\nimport { arrayMethods } from './array'\n\n// 递归处理 里面的数据可能很复杂\nclass Observer {\n  constructor(value) {\n    // 如果数据的层次过多 需要递归的去解析对象中的属性  依次增加 get和set\n    // vue3 使用了proxy 就不需要依次的递归了 支持监听整个对象 也不需要set和get\n    // 给每一个监控过的对象都加一个 __ob__ 属性 指向当前的Observer实例\n    // value.__ob__ = this\n    def(value, '__ob__', this)\n    // Object.defineProperty(value, '__ob__', {\n    //   // 不可被枚举\n    //   enumerable: false,\n    //   // 不可以被在修改\n    //   configurable: false,\n    //   // 值\n    //   value: this\n    // })\n    if(Array.isArray(value)) {\n      // 改变数组的原型上的方法 7个变异的方法  其他没有重写，还是直接走数组原先的方法\n      // 不会被拦截\n      value.__proto__ = arrayMethods\n      // setArray()\n      this.observerArray(value)\n    } else {\n      this.walk(value)\n    }\n  }\n  walk(data) {\n    let keys = Object.keys(data)\n    keys.forEach((key) => {\n      defineReactive(data, key, data[key])\n    })\n  }\n  observerArray(value) {\n    // 判断数组是否还有对象  也是需要进行劫持的\n    value.forEach((item, index) => {\n      observer(item)\n    })\n  }\n}\n\nexport function observer(data) {\n  // 数据的劫持\n  // console.log(\"数据的劫持\")\n  // 判断是否是对象\n  let isObj = isObject(data)\n  // console.log(isObj)\n  if(!isObj) {\n    return\n  }\n  // 观测这个对象\n  return new Observer(data)\n}\n\n// 定义响应式数据\n// data对象里面的key 定义为响应式数据\nfunction defineReactive(data, key, value) {\n  // console.log(key, value)\n  observer(value)\n  Object.defineProperty(data, key, {\n    // 获取值的时候 做一些操作\n    get() {\n      return value\n    },\n    // 设置值的时候 做一些操作\n    set(newValue) {\n      console.log(\"重新设置了数据了\")\n      if(newValue === value) return\n      // 设置的值是对象  还需要再次进行数据的劫持\n      observer(newValue)\n      value = newValue\n    }\n  })\n}\n\nexport function initSet(Vue, vm) {\n  Vue.prototype.$set = function(target, key, value) {\n    // 响应式处理\n    defineReactive(target, key, value)\n    // vm._data = target\n  }\n}\n\n// function setArray() {\n//   let methods = [\n//     'unshift',\n//     'shift',\n//     'pop',\n//     'push',\n//     'splice',\n//     'sort',\n//     'reverse'\n//   ]\n//   let oldPrototype = Array.prototype\n//   methods.forEach((method) => {\n//     Array.prototype[method] = function(value) {\n//       console.log(oldPrototype)\n//       // 这个会导致死循环\n//       // let r = oldPrototype[method].call(this, value)\n//       // return r\n//     }\n//   })\n// }\n// for(let i = 0; i < methods.length; i++) {\n//   Array.prototype[methods[i]] = function(value) {\n//     console.log(value)\n//     // oldPrototype\n//     // oldPrototype[methods[i]].call(this, value)\n//     observer(value)\n//   }\n// }\n","// 初始化状态\nimport { observer } from '../observer/index.js'\nexport function initState(vm) {\n  const opts = vm.$options\n  // console.log(opts)\n  // vue的数据来源 属性 方法 数据 计算属性 watch\n  // 初始化 先属性 在方法\n  if(opts.props) {\n    initProps(vm)\n  }\n  if(opts.methods) {\n    initMethod(vm)\n  }\n  if(opts.data) {\n    initData(vm)\n    console.log(\"111111xxxxx\")\n    let keys = Object.keys(vm._data)\n    // 这边也是需要进行递归处理的\n    // 做一个代理  让用户可以直接通过 实例.xx 获取属性\n    keys.forEach((key, index) => {\n      // 也就是做一个引用而已  还是指向vm._data里面的数据\n      Object.defineProperty(vm, key, {\n        get() {\n          return vm._data[key]\n        },\n        set(newValue) {\n          vm._data[key] = newValue\n        }\n      })\n    })\n  }\n  if(opts.data) {\n    initComputed(vm)\n  }\n  if(opts.data) {\n    initWatch(vm)\n  }\n}\n\nfunction initProps(vm) {\n\n}\n\nfunction initMethod(vm) {\n  \n}\n\nfunction initData(vm) {\n  console.log('初始化数据')\n  let data = vm.$options.data\n  // data里面的this指向还是实例\n  data = vm._data = typeof data == 'function' ? data.call(vm) : data\n  // 初始化数据后，处理数据 让用户可以直接修改data里面的数据\n  // 将数据挂载到 vm._data 上面\n  // console.log(vm._data, 'vm._data')\n  // 对象劫持 用户改变了数据 我希望可以得到通知刷新页面\n  observer(data) // 响应式原理\n}\n\nfunction initComputed(vm) {\n  \n}\n\nfunction initWatch(vm) {\n  \n}\n","import { initState } from './state'\nimport { initSet } from '../observer/index'\n\n// 在原型上添加一个init方法\nexport function initMixin(Vue) {\n  Vue.prototype._init = function(options) {\n    // 数据的劫持 当前的实例就是this\n    const vm = this\n    // this.$options 指代的就是用户传递的属性\n    vm.$options = options\n    \n    initSet(Vue)\n    // 初始化状态\n    initState(vm)\n  }\n}\n","// Vue的核心代码 这个文件相当于整合的功能\nimport { initMixin } from './init/init'\nfunction Vue(options) {\n  // 进行vue的初始化\n  this._init(options)\n}\n// let vue = require('vue')\n// console.log(vue)\n// 通过引入文件的方式，给vue原型上添加方法\n// 执行一下 把大 Vue传递进去\ninitMixin(Vue)\n\n// initRender(Vue)\nexport default Vue\n\n// function React() {\n//   console.log('react')\n//   this.a = 'sgjm'\n//   this._init()\n// }\n\n// // 原型上的方法 可以获取当前的实例\n// React.prototype._init = function() {\n//   console.log(this)\n// }\n\n// new React()\n"],"names":["isObject","data","def","key","value","Object","defineProperty","enumerable","configurable","oldArrayMethods","Array","prototype","arrayMethods","create","methods","forEach","method","index","console","log","args","result","apply","ob","__ob__","inserted","slice","observerArray","Observer","isArray","__proto__","walk","keys","defineReactive","item","observer","isObj","get","set","newValue","initSet","Vue","vm","$set","target","initState","opts","$options","props","initData","_data","call","initMixin","_init","options"],"mappings":"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"}